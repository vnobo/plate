plugins {
    id 'org.springframework.boot' version '3.4.0' apply false
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.graalvm.buildtools.native' version '0.10.3'
}

ext {
    def prefixStr = System.getenv("DOCKER_PREFIX")
    def usernameStr = System.getenv("DOCKER_USERNAME")
    def passwordStr = System.getenv("DOCKER_PASSWORD")
    def emailStr = System.getenv("DOCKER_EMAIL")
    dockerUsername = Objects.isNull(usernameStr) ? "Your default username" : usernameStr
    dockerPassword = Objects.isNull(passwordStr) ? "Your default password" : passwordStr
    dockerPrefix = Objects.isNull(prefixStr) ? "Your default prefix" : prefixStr
    dockerEmail = Objects.isNull(emailStr) ? "Your default email" : emailStr
}

configure(allprojects) { project ->

    group "com.alex.plate"

    repositories {
        mavenLocal()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
        mavenCentral()
    }

    configurations.configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, "minutes"
    }
}

configure(subprojects - project(":boot")) { project ->

    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    tasks.named("bootBuildImage") {
        createdDate = "now"
        tags = ["${dockerPrefix}/${rootProject.name}-${project.name}:latest"]
        imageName = "${dockerPrefix}/${rootProject.name}-${project.name}:${project.version}"
        environment = [
                "BPE_DELIM_JAVA_TOOL_OPTIONS" : " ",
                "BPE_APPEND_JAVA_TOOL_OPTIONS": "-Dfile.encoding=UTF-8 " +
                        "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"
        ]
        publish = true
        docker {
            publishRegistry {
                username = "${dockerUsername}"
                password = "${dockerPassword}"
                email = "${dockerEmail}"
            }
        }
        buildWorkspace {
            volume {
                name = "cache-${rootProject.name}-${project.name}.work"
            }
        }
        buildCache {
            volume {
                name = "cache-${rootProject.name}-${project.name}.build"
            }
        }
        launchCache {
            volume {
                name = "cache-${rootProject.name}-${project.name}.launch"
            }
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    dependencies {

        implementation("com.google.guava:guava:33.+")
        implementation("com.github.f4b6a3:ulid-creator:5.+")

        implementation("org.springframework.boot:spring-boot-starter-actuator")
        implementation("org.springframework.boot:spring-boot-starter-validation")

        implementation("org.springframework.boot:spring-boot-starter-log4j2")
        modules {
            module("org.springframework.boot:spring-boot-starter-logging") {
                replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
            }
        }

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }
}