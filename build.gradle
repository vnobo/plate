plugins {
    id 'org.springframework.boot' version '3.5.3' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
    id 'org.graalvm.buildtools.native' version '0.10.5' apply false
}
ext {
    set('javaVersion', 21)
    set('guavaVersion', '33.+')
    set('springAiVersion', "1.+")
}

configure(allprojects) { project ->

    group "com.alex.plate"

    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations.configureEach {
        resolutionStrategy {
            cacheChangingModulesFor 0, "minutes"
            cacheDynamicVersionsFor 10, 'minutes'
        }
    }
}

configure(subprojects - project(":boot")) { project ->

    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.graalvm.buildtools.native"

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(javaVersion)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    tasks.named("bootBuildImage") {
        createdDate = "now"
        imageName = "localhost:5000/${rootProject.name}-${project.name}:latest"
        imagePlatform = "linux/amd64"
        environment = [
                "BPE_DELIM_JAVA_TOOL_OPTIONS" : " ",
                "BPE_APPEND_JAVA_TOOL_OPTIONS": "-Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" +
                        "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"
        ]
    }

    dependencies {
        implementation("com.google.guava:guava:$guavaVersion")
        implementation("org.springframework.boot:spring-boot-starter-actuator")

        implementation("org.springframework.boot:spring-boot-starter-log4j2") {
            exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j2-impl'
        }

        modules {
            module("org.springframework.boot:spring-boot-starter-logging") {
                replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
            }
        }

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'

        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-testcontainers'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.testcontainers:r2dbc'
        testImplementation 'org.testcontainers:postgresql'
        testImplementation 'com.redis:testcontainers-redis'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        implementation platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        }
    }
}