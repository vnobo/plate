# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Postgresql Build
run-name: ${{ github.actor }} is Build Actions
on:
  push:
    branches: [ "main","dev" ]
  pull_request:
    branches: [ "main" ]
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  postgres-locale-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker buildx build --push -t  ${{ env.REGISTRY }}/postgres:17 ./boot/postgres
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  postgres-zhparser-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker buildx build --push -t  ${{ env.REGISTRY }}/postgres:zhparser ./boot/postgres/zhparser
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  postgres-postgis-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Build postgis Docker image
        run: docker buildx build --push -t  ${{ env.REGISTRY }}/postgres:postgis ./boot/postgres/postgis
      - uses: actions/checkout@v4
      - name: Build latest Docker image
        run: docker buildx build --push -t  ${{ env.REGISTRY }}/postgres:latest ./boot/postgres/postgis
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
