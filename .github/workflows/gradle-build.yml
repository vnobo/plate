# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
name: Gradle Build Image
run-name: ${{ github.actor }} is Build Boot Image Actions
on:
  push:
    branches: [ "main","dev" ]
  release:
    types: [ created ]
env:
  GITHUB_REGISTRY: ghcr.io/${{ github.actor }}
  DOCKER_REGISTRY: docker.io/alexbob
jobs:
  boot-build-image:
    environment: base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry ${{ env.GITHUB_REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAGK_TOKEN }}

      - name: Log into registry docker.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{env.DOCKER_REGISTRY}}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 21 for x64
        uses: actions/setup-java@v4
        with:
          version: 'latest'
          java-version: '21'
          distribution: 'liberica'
          architecture: x64
          settings-path: ${{ github.workspace }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Execute Gradle platform bootBuildImage
        run: ./gradlew bootBuildImage

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push image to GHCR
        run: |
          docker buildx imagetools create \
            --tag ${{ env.GITHUB_REGISTRY }}/plate-platform:latest \
            --tag ${{ env.GITHUB_REGISTRY }}/plate-platform:3.0.0 \
           plate-platform:latest
          
          docker buildx imagetools create \
            --tag ${{ env.GITHUB_REGISTRY }}/plate-oauth2:latest \
            --tag ${{ env.GITHUB_REGISTRY }}/plate-oauth2:3.0.0 \
           plate-oauth2:latest
        
