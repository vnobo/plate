plugins {
    id "java"
    id "org.springframework.boot"
    id 'io.spring.dependency-management'
    id 'org.graalvm.buildtools.native'
}

tasks.named("bootBuildImage") {
    createdDate = "now"
    imageName = "localhost:5000/${rootProject.name}-${project.name}:latest"
    environment = [
            "BPE_DELIM_JAVA_TOOL_OPTIONS" : " ",
            "BPE_APPEND_JAVA_TOOL_OPTIONS": "-Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" +
                    "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"
    ]
    buildCache {
        volume {
            name = "cache-${rootProject.name}-${project.name}.build"
        }
    }
    launchCache {
        volume {
            name = "cache-${rootProject.name}-${project.name}.launch"
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

graalvmNative {
    toolchainDetection = true
    testSupport = false
    binaries.configureEach {
        resources.autodetect()
    }
}

dependencies {

    implementation('com.github.f4b6a3:uuid-creator:6.+')
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
    implementation("org.springframework.session:spring-session-data-redis")

    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive")

    implementation("org.springframework.boot:spring-boot-starter-data-r2dbc")
    implementation 'org.postgresql:r2dbc-postgresql'

    // spring web port http3
    //runtimeOnly("io.netty:netty-tcnative-boringssl-static")
    //runtimeOnly("io.netty.incubator:netty-incubator-codec-http3:0.+")

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly 'org.springframework:spring-jdbc'

    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:r2dbc'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'com.redis:testcontainers-redis'
}

tasks.named("test") {
    useJUnitPlatform()
}
